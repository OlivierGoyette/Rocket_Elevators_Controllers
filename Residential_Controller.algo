"Immeuble Residential doit contenir

-Une colonne
-Composé de deux ascenseur
-Avec 10 étages

Objet controlé

-Colonne
-Ascenseur
-Bouton dappel (à lentré)
-Porte
-Bouton de demande détage (à lintérieur)

Bouton appartient à la colonne
La colonne controle les acenseurs
"

Door_Open = false
Door_Close = true


DEFINE Column USING id AND number_of_floor AND number_of_elevator AND status AND direction
    ID: id,
    Status: status,
    ElevatorList: SET to create_Elevator_List
    number_of_floor: 10
    SEQUENCE create_Elevator_List USING number_of_elevator
        TEMPID = 1
        FOR EACH number_of_elevator
            ADD (INSTANTIATE Elevator WITH TEMPID AND 1 AND "IDLE") TO ElevatorList
            INCREMENT TEMPID
        ENDFOR
    ENDSEQUENCE
ENDDEFINE

DEFINE ElevatorList USING id AND currentFloor AND status AND direction AND maxGap
    ID: id
    status: IDLE
    Directions: directions
    currentFloor: 
    maxGap: 10
   SEQUENCE Best_Elevator USING currentFloor AND Direction
        SET bestElevator TO NULL
        FOR EACH elevator IN ElevatorList
        IF elevator Gap < maxGap
            maxGap = elevator Gap
            bestElevator = elevator
        ENDIF
    ENDFOR
    ENDSEQUENCE
ENDDEFINE

DEFINE Button_Floor USING id AND status AND Directions AND number_of_floor
    ID: id
    Status: status
    Directions: directions
    number_of_floor: 10
    direction: "UP" OR "DOWN"
    SEQUENCE create_Button_Floor USING number_of_floor
        FOR Each number_of_floor
            ADD Button_Floor WITH "UP" AND number_of_floor TO create_Button_Floor
            ADD Button_Floor WITH "DOWN" AND number_of_floor TO create_Button_Floor
            IF currentFloor = 1 OR 10
            REMOVE create_Button_Floor.direction10(UP) FROM create_Button_Floor
            REMOVE create_Button_Floor.direction1(DOWN) FROM create_Button_Floor
        ENDFOR
    ENDSEQUENCE
ENDDEFINE


DEFINE Button_Request_Floor USING direction
    Directions: directions
    SEQUENCE Elevator_Request USING number_of_floor AND direction
        IF Button_Request_Floor is PRESSED 
            READ Button_Request_Floor.direction AND Button_Request_Floor.number_of_floor
            CALL Elevator WITH number_of_floor AND direction
            INIT moveElevator TO Elevator_Request.number_of_floor WITH direction
            THEN SET  Door_CloseAndOpen status TO IDLE
            THEN SET Show_Indicate_Floor id 
        ENDIF 
    ENDSEQUENCE
ENDDEFINE

DEFINE Door_CloseAndOpen USING id AND status AND Elevator AND number_of_floor
    ID: id
    Status: status
    SEQUENCE Door_Open
        FOR EACH number_of_floor
            when Best_Elevator at number_of_floor (selected)
            then Door_Open = true Door_Close = false
            Wait 10 seconde
            then Door_Open = false Door_Close = true
        ENDFOR
    ENDSEQUENCE
ENDDEFINE

DEFINE Show_Indicate_Floor USING currentFloor AND number_of_floor
    ID: id
    Status: status
    SEQUENCE Indicate_Floor
        display wich floor you are now with currentFloor    
    ENDSEQUENCE
ENDDEFINE


SEQUENCE initSystem USING number_of_floor AND number_of_elevator 
    
    SET column1 TO INSTANTIATE Column WITH 1 AND number_of_floor AND number_of_elevator AND ON
    CALL column1.create_Elevator_List
    
ENDSEQUENCE


"SCENARIO 1"

CALL Elevator_A WITH 3 AND UP
CALL Floor_Request TO 7

"SCENARIO 2"

CALL Elevator_B WITH 1
CALL Floor_Request TO 6

CALL Elevator_B WITH 3 
CALL Floor_Request TO 5

CALL Elevator_A WITH 9
CALL Floor_Request TO 2

"SCNENARIO 3"

CALL Elevator_A WITH 3
CALL Floor_Request TO 2

CALL Elevator_B WITH 10
CALL Floor_Request TO 3



